{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Obsolete Gradle Dependency",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "A newer version of androidx.test.espresso:espresso-core than 3.5.0 is available: 3.5.1",
  "detailsInfo": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 43,
      "offset": 31,
      "length": 44,
      "code": {
        "startLine": 41,
        "length": 44,
        "offset": 136,
        "surroundingCode": "    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.4'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintGradleDependency",
    "baselineState": "new"
  },
  "hash": "0eda0b1ee25232d32d2289b12fff72666947cbd747eac1a7e89b320f245cc5cf"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Obsolete Gradle Dependency",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "A newer version of androidx.core:core-ktx than 1.7.0 is available: 1.10.1",
  "detailsInfo": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 37,
      "offset": 20,
      "length": 30,
      "code": {
        "startLine": 35,
        "length": 30,
        "offset": 35,
        "surroundingCode": "dependencies {\n\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintGradleDependency",
    "baselineState": "new"
  },
  "hash": "1355e1492e75d0eaad41643e5e7133570c19ec8b20bb07517a0342ba789ce12e"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Obsolete Gradle Dependency",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "A newer version of androidx.constraintlayout:constraintlayout than 2.1.3 is available: 2.1.4",
  "detailsInfo": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 40,
      "offset": 20,
      "length": 50,
      "code": {
        "startLine": 38,
        "length": 50,
        "offset": 139,
        "surroundingCode": "    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.4'"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintGradleDependency",
    "baselineState": "new"
  },
  "hash": "3b86e70df10b1ed50097fa65d2a206d162187a9b6564ee29ee01f7b69cb642e6"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Obsolete Gradle Dependency",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "A newer version of androidx.test.ext:junit than 1.1.4 is available: 1.1.5",
  "detailsInfo": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 42,
      "offset": 31,
      "length": 31,
      "code": {
        "startLine": 40,
        "length": 31,
        "offset": 144,
        "surroundingCode": "    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.4'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintGradleDependency",
    "baselineState": "new"
  },
  "hash": "6404ede4f8f3a6964e4f6ae69642e605d3cf99d5c093cb2f2f53703b6b9aaaeb"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Obsolete Gradle Dependency",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "A newer version of com.google.android.material:material than 1.5.0 is available: 1.9.0",
  "detailsInfo": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 39,
      "offset": 20,
      "length": 44,
      "code": {
        "startLine": 37,
        "length": 44,
        "offset": 125,
        "surroundingCode": "    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    testImplementation 'junit:junit:4.13.2'"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintGradleDependency",
    "baselineState": "new"
  },
  "hash": "648b8a5aafa3077ca0f7c255cfa51b89299c33fe438e4ba8c62f963633e57dc2"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Obsolete Gradle Dependency",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "A newer version of androidx.appcompat:appcompat than 1.4.1 is available: 1.6.1",
  "detailsInfo": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 38,
      "offset": 20,
      "length": 36,
      "code": {
        "startLine": 36,
        "length": 36,
        "offset": 70,
        "surroundingCode": "\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintGradleDependency",
    "baselineState": "new"
  },
  "hash": "967076ca6072f5809a708eaa91d468a21ada80e752908cf75f74284a29853aac"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Kotlin nullability annotation",
  "tags": [
    "kotlin"
  ],
  "severity": "Critical",
  "comment": "Do not use '@Nullable' in Kotlin; the nullability is already implied by the Kotlin type 'String?' ending with '?'",
  "detailsInfo": "Kotlin nullability annotation  \n\nIn Kotlin, nullness is part of the type system; `s: String` is **never** null and `s: String?` is sometimes null, whether or not you add in additional annotations stating `@NonNull` or `@Nullable`. These are likely copy/paste mistakes, and are misleading.  \n\nIssue id: KotlinNullnessAnnotation",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 14,
      "length": 9,
      "code": {
        "startLine": 13,
        "length": 9,
        "offset": 20,
        "surroundingCode": "    }\n\n    fun test(@Nullable s: String?): Int? = s?.let { it.length }\n\n    fun main() {"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "AndroidLintKotlinNullnessAnnotation",
    "baselineState": "new"
  },
  "hash": "6a96f27c5196bd184b1ab6a633806e6418fb4671f550d17012c5391bf9d35556"
},{
  "tool": "Code Inspection",
  "category": "Usability",
  "type": "Monochrome icon is not defined",
  "tags": [
    "XML"
  ],
  "severity": "High",
  "comment": "The application adaptive roundIcon is missing a monochrome tag",
  "detailsInfo": "Monochrome icon is not defined  \n\nIf `android:roundIcon` and `android:icon` are both in your manifest, you must either remove the reference to `android:roundIcon` if it is not needed; or, supply the monochrome icon in the drawable defined by the `android:roundIcon` and `android:icon` attribute.  \n\nFor example, if `android:roundIcon` and `android:icon` are both in the manifest, a launcher might choose to use `android:roundIcon` over `android:icon` to display the adaptive app icon. Therefore, your themed application iconwill not show if your monochrome attribute is not also specified in `android:roundIcon`.  \n\nIssue id: MonochromeLauncherIcon",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml",
      "language": "XML",
      "line": 2,
      "offset": 1,
      "length": 233,
      "code": {
        "startLine": 1,
        "length": 233,
        "offset": 39,
        "surroundingCode": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <background android:drawable=\"@drawable/ic_launcher_background\" />\n    <foreground android:drawable=\"@drawable/ic_launcher_foreground\" />\n</adaptive-icon>"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "AndroidLintMonochromeLauncherIcon",
    "baselineState": "new"
  },
  "hash": "7ac8cb7458f80d3eabd91c11f407d7d90b5e33c744d8676504b5e0e47313792b"
},{
  "tool": "Code Inspection",
  "category": "Usability",
  "type": "Monochrome icon is not defined",
  "tags": [
    "XML"
  ],
  "severity": "High",
  "comment": "The application adaptive icon is missing a monochrome tag",
  "detailsInfo": "Monochrome icon is not defined  \n\nIf `android:roundIcon` and `android:icon` are both in your manifest, you must either remove the reference to `android:roundIcon` if it is not needed; or, supply the monochrome icon in the drawable defined by the `android:roundIcon` and `android:icon` attribute.  \n\nFor example, if `android:roundIcon` and `android:icon` are both in the manifest, a launcher might choose to use `android:roundIcon` over `android:icon` to display the adaptive app icon. Therefore, your themed application iconwill not show if your monochrome attribute is not also specified in `android:roundIcon`.  \n\nIssue id: MonochromeLauncherIcon",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml",
      "language": "XML",
      "line": 2,
      "offset": 1,
      "length": 233,
      "code": {
        "startLine": 1,
        "length": 233,
        "offset": 39,
        "surroundingCode": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <background android:drawable=\"@drawable/ic_launcher_background\" />\n    <foreground android:drawable=\"@drawable/ic_launcher_foreground\" />\n</adaptive-icon>"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "AndroidLintMonochromeLauncherIcon",
    "baselineState": "new"
  },
  "hash": "c9b6b4d4df6d71ba6ea2b866227a023bf83648ddeb0d7000a1357e40711537c6"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "Obsolete SDK_INT Version Check",
  "severity": "High",
  "comment": "This folder configuration ('v24') is unnecessary; 'minSdkVersion' is 26. Merge all the resources in this folder into 'drawable'.",
  "detailsInfo": "Obsolete SDK_INT Version Check  \n\nThis check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.  \n\nSimilarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.  \n\nIssue id: ObsoleteSdkInt",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/res/drawable-v24",
      "language": "",
      "line": 0,
      "offset": 0,
      "length": 0,
      "code": {
        "startLine": 0,
        "length": 0,
        "offset": 0,
        "surroundingCode": ""
      }
    }
  ],
  "attributes": {
    "module": "",
    "inspectionName": "AndroidLintObsoleteSdkInt",
    "baselineState": "new"
  },
  "hash": "2e6d47f5e908fef67d82485ce77c82fe3c32a15bf89eedb0492da267f5c8d5ca"
},{
  "tool": "Code Inspection",
  "category": "Performance",
  "type": "Obsolete SDK_INT Version Check",
  "severity": "High",
  "comment": "This folder configuration ('v26') is unnecessary; 'minSdkVersion' is 26. Merge all the resources in this folder into 'mipmap-anydpi'.",
  "detailsInfo": "Obsolete SDK_INT Version Check  \n\nThis check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.  \n\nSimilarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.  \n\nIssue id: ObsoleteSdkInt",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/res/mipmap-anydpi-v26",
      "language": "",
      "line": 0,
      "offset": 0,
      "length": 0,
      "code": {
        "startLine": 0,
        "length": 0,
        "offset": 0,
        "surroundingCode": ""
      }
    }
  ],
  "attributes": {
    "module": "",
    "inspectionName": "AndroidLintObsoleteSdkInt",
    "baselineState": "new"
  },
  "hash": "a29dab3f892c10fc3ed4b4a4a4dff8bd766b3f6311b1cf59ce284b3340277b1b"
},{
  "tool": "Code Inspection",
  "category": "Correctness",
  "type": "Target SDK attribute is not targeting latest version",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details.",
  "detailsInfo": "Target SDK attribute is not targeting latest version  \n\nWhen your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.  \n\nTo fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: <https://developer.android.com/reference/android/os/Build.VERSION_CODES.html> as well as follow this guide:  \n<https://developer.android.com/distribute/best-practices/develop/target-sdk.html>  \n\nIssue id: OldTargetApi",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 13,
      "offset": 9,
      "length": 12,
      "code": {
        "startLine": 11,
        "length": 12,
        "offset": 76,
        "surroundingCode": "        applicationId \"com.example.qodana_sample\"\n        minSdk 26\n        targetSdk 32\n        versionCode 1\n        versionName \"1.0\""
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "AndroidLintOldTargetApi",
    "baselineState": "new"
  },
  "hash": "345eee690e58c284f040d18c8e589e9042ad5c9ddba210c59f5727f948096ddf"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Unresolved reference expression",
  "tags": [
    "Groovy"
  ],
  "severity": "Moderate",
  "comment": "Cannot resolve symbol 'RepositoriesMode'",
  "detailsInfo": "Reports reference expressions which cannot be resolved.",
  "sources": [
    {
      "type": "file",
      "path": "settings.gradle",
      "language": "Groovy",
      "line": 9,
      "offset": 26,
      "length": 16,
      "code": {
        "startLine": 7,
        "length": 16,
        "offset": 60,
        "surroundingCode": "}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GrUnresolvedAccess",
    "baselineState": "new"
  },
  "hash": "2a7520aa06efc50f5808d3c36a539d24d7ebdecd61b37a9c2f4f3bb3b1827c7b"
},{
  "tool": "Code Inspection",
  "category": "Probable bugs",
  "type": "Unresolved reference expression",
  "tags": [
    "Groovy"
  ],
  "severity": "Moderate",
  "comment": "Cannot resolve symbol 'kotlinOptions'",
  "detailsInfo": "Reports reference expressions which cannot be resolved.",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 30,
      "offset": 5,
      "length": 13,
      "code": {
        "startLine": 28,
        "length": 13,
        "offset": 62,
        "surroundingCode": "        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "GrUnresolvedAccess",
    "baselineState": "new"
  },
  "hash": "d5f52d4aa5ad95507e8492f917ecfbb076d0b8dc834b4df5c15365b19754d1ec"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'id' in 'org.gradle.plugin.use.PluginDependenciesSpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 3,
      "offset": 8,
      "length": 30,
      "code": {
        "startLine": 1,
        "length": 30,
        "offset": 50,
        "surroundingCode": "plugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "020bddd808749341e5d8627c7e27538dd1870be8d8af85e7e3266bdd33ba96f8"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'version' in 'org.gradle.plugin.use.PluginDependencySpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle",
      "language": "Groovy",
      "line": 4,
      "offset": 38,
      "length": 7,
      "code": {
        "startLine": 2,
        "length": 7,
        "offset": 108,
        "surroundingCode": "plugins {\n    id 'com.android.application' version '7.3.0' apply false\n    id 'com.android.library' version '7.3.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "1ab4b9a38297a333ccf98d79f58a21b9c4fe270d7297e9ce861c271912f1a0fd"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "Moderate",
  "comment": "Cannot infer argument types",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "settings.gradle",
      "language": "Groovy",
      "line": 9,
      "offset": 25,
      "length": 40,
      "code": {
        "startLine": 7,
        "length": 40,
        "offset": 59,
        "surroundingCode": "}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "1d6d41695b49c53ef84a17ae8bc664e245344f3e9aa877a7b498420aec0ac6d5"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'version' in 'org.gradle.plugin.use.PluginDependencySpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle",
      "language": "Groovy",
      "line": 5,
      "offset": 47,
      "length": 8,
      "code": {
        "startLine": 3,
        "length": 8,
        "offset": 164,
        "surroundingCode": "    id 'com.android.application' version '7.3.0' apply false\n    id 'com.android.library' version '7.3.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "2e95d1c53905aeb3c62f134dbbded5b7f0dc6887a93de8475b2d9770bc0ab65c"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'id' in 'org.gradle.plugin.use.PluginDependenciesSpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "app/build.gradle",
      "language": "Groovy",
      "line": 2,
      "offset": 8,
      "length": 25,
      "code": {
        "startLine": 1,
        "length": 25,
        "offset": 17,
        "surroundingCode": "plugins {\n    id 'com.android.application'\n    id 'org.jetbrains.kotlin.android'\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "526609492b1696832b54340bf3742fddfa4fa00fca8a65eb9460d5dc768c084d"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'id' in 'org.gradle.plugin.use.PluginDependenciesSpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle",
      "language": "Groovy",
      "line": 3,
      "offset": 8,
      "length": 25,
      "code": {
        "startLine": 1,
        "length": 25,
        "offset": 117,
        "surroundingCode": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    id 'com.android.application' version '7.3.0' apply false\n    id 'com.android.library' version '7.3.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "5f7fa5f34b71ed5fc7913955296fb7e7873040a647187cd06ca1977885e51915"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'include' in 'org.gradle.api.initialization.Settings' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "settings.gradle",
      "language": "Groovy",
      "line": 16,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 14,
        "length": 6,
        "offset": 46,
        "surroundingCode": "}\nrootProject.name = \"Qodana _Sample\"\ninclude ':app'\n"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "659b2189dedb98a1f2d84eeb655e139d6d439326181acde7f89845e7dd7d8d2f"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'id' in 'org.gradle.plugin.use.PluginDependenciesSpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle",
      "language": "Groovy",
      "line": 4,
      "offset": 8,
      "length": 21,
      "code": {
        "startLine": 2,
        "length": 21,
        "offset": 78,
        "surroundingCode": "plugins {\n    id 'com.android.application' version '7.3.0' apply false\n    id 'com.android.library' version '7.3.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "6ed7c217f4cea808d09a15ef8f85767cb448f8aa97a14844d8e039044dc00bfc"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'version' in 'org.gradle.plugin.use.PluginDependencySpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle",
      "language": "Groovy",
      "line": 3,
      "offset": 42,
      "length": 7,
      "code": {
        "startLine": 1,
        "length": 7,
        "offset": 151,
        "surroundingCode": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    id 'com.android.application' version '7.3.0' apply false\n    id 'com.android.library' version '7.3.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "f5844d054da6bb2a212da16d212e09a1f0b85cdde51437580f37c6d2c3692d86"
},{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Incompatible type assignments",
  "tags": [
    "Groovy"
  ],
  "severity": "High",
  "comment": "'id' in 'org.gradle.plugin.use.PluginDependenciesSpec' cannot be applied to '(java.lang.String)'",
  "detailsInfo": "Reports assignments with incompatible types.\n\nSuch assignments might result in various runtime exceptions.\n\n**Example:**\n\n\n      class A {}\n      class B {}\n\n      // incompatible assignment\n      A a = new B()\n",
  "sources": [
    {
      "type": "file",
      "path": "build.gradle",
      "language": "Groovy",
      "line": 5,
      "offset": 8,
      "length": 30,
      "code": {
        "startLine": 3,
        "length": 30,
        "offset": 125,
        "surroundingCode": "    id 'com.android.application' version '7.3.0' apply false\n    id 'com.android.library' version '7.3.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "GroovyAssignabilityCheck",
    "baselineState": "new"
  },
  "hash": "ff335868b1bbdf0a18ed5504511ef68148293e37902bb5b2e548afce51d47cd8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused import directive",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Unused import directive",
  "detailsInfo": "Reports redundant `import` statements.\n\nDefault and unused imports can be safely removed.\n\n**Example:**\n\n\n      import kotlin.*\n      import kotlin.collections.*\n      import kotlin.comparisons.*\n      import kotlin.io.*\n      import kotlin.ranges.*\n      import kotlin.sequences.*\n      import kotlin.text.*\n\n      // jvm specific\n      import java.lang.*\n      import kotlin.jvm.*\n\n      // js specific\n      import kotlin.js.*\n\n      import java.io.* // this import is unused and could be removed\n      import java.util.*\n\n      fun foo(list: ArrayList<String>) {\n          list.add(\"\")\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 23,
      "code": {
        "startLine": 3,
        "length": 23,
        "offset": 73,
        "surroundingCode": "import androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.util.Log\nimport androidx.annotation.Nullable\n"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "KotlinUnusedImport",
    "baselineState": "new"
  },
  "hash": "217e84c1eb080c9e429777c7e3a6e7752e0e3f4644759ab0f5dc8c80f8733e6a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "'unneccesarry' is always non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 26,
      "length": 1,
      "code": {
        "startLine": 7,
        "length": 1,
        "offset": 69,
        "surroundingCode": "\nclass MainActivity : AppCompatActivity() {\n    val unneccesarry: Int? = 0\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "RedundantNullableReturnType",
    "baselineState": "new"
  },
  "hash": "74245f4471851af12f79d03d28646351a8d5cd1c99263d22ba753c810983bc19"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant nullable return type",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "'greeting' always returns non-null type",
  "detailsInfo": "Reports functions and variables with nullable return type which never return or become `null`.\n\n**Example:**\n\n\n      fun greeting(user: String): String? = \"Hello, $user!\"\n\nAfter the quick-fix is applied:\n\n\n      fun greeting(user: String): String = \"Hello, $user!\"\n",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 39,
      "length": 1,
      "code": {
        "startLine": 19,
        "length": 1,
        "offset": 45,
        "surroundingCode": "    }\n\n    fun greeting(user: String): String? = \"Hello, $user!\"\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "RedundantNullableReturnType",
    "baselineState": "new"
  },
  "hash": "bf820e885a5a16322210af0925a94d94af787be697fb6e347c7a78928bef10e3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant receiver-based 'let' call",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Redundant 'let' call could be removed",
  "detailsInfo": "Reports redundant receiver-based `let` calls.\n\nThe quick-fix removes the redundant `let` call.\n\n**Example:**\n\n\n      fun test(s: String?): Int? = s?.let { it.length }\n\nAfter the quick-fix is applied:\n\n\n      fun test(s: String?): Int? = s?.length\n",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 47,
      "length": 3,
      "code": {
        "startLine": 13,
        "length": 3,
        "offset": 53,
        "surroundingCode": "    }\n\n    fun test(@Nullable s: String?): Int? = s?.let { it.length }\n\n    fun main() {"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "SimpleRedundantLet",
    "baselineState": "new"
  },
  "hash": "19a807dd07957b93bd2b39a8f9583f62902dd3ea2c92e852b60677bf78b8091e"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Call chain on collection type can be simplified",
  "tags": [
    "kotlin"
  ],
  "severity": "Moderate",
  "comment": "Call chain on collection type may be simplified",
  "detailsInfo": "Reports two-call chains replaceable by a single call.\n\nIt can help you to avoid redundant code execution.\n\nThe quick-fix replaces the call chain with a single call.\n\n**Example:**\n\n\n      fun main() {\n          listOf(1, 2, 3).filter { it > 1 }.count()\n      }\n\nAfter the quick-fix is applied:\n\n\n      fun main() {\n          listOf(1, 2, 3).count { it > 1 }\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 25,
      "length": 6,
      "code": {
        "startLine": 16,
        "length": 6,
        "offset": 42,
        "surroundingCode": "\n    fun main() {\n        listOf(1, 2, 3).filter { it > 1 }.count()\n    }\n"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "SimplifiableCallChain",
    "baselineState": "new"
  },
  "hash": "b07f0e226a6fd07cdb74ef3a4d771507a6fa760c1ca73ca922f681611cdc8bbc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "textmate"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'ERRORLEVEL'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "gradlew.bat",
      "language": "textmate",
      "line": 43,
      "offset": 6,
      "length": 10,
      "code": {
        "startLine": 41,
        "length": 10,
        "offset": 59,
        "surroundingCode": "set JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto execute\r\n\r\necho.\r"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "1647156ebfd621b353c5b28f3ae12843a57e6f878fb8aa74c44237ee2c39b370"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "yaml"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'dawidd'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": ".github/workflows/labeled.yml",
      "language": "yaml",
      "line": 16,
      "offset": 15,
      "length": 6,
      "code": {
        "startLine": 14,
        "length": 6,
        "offset": 137,
        "surroundingCode": "        if: ${{(github.event.label.name == 'qodana') || (github.event.label.name == 'テスト')}}\n        id: download-artifact\n        uses: dawidd6/action-download-artifact@v2\n        with:\n          workflow: qodana.yml"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "1ddbf10291f4c86b3ecb067398106ab8060abcfdf9abc2dd88c66bcb4c54008c"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "textmate"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'Dorg'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "gradlew.bat",
      "language": "textmate",
      "line": 74,
      "offset": 61,
      "length": 4,
      "code": {
        "startLine": 72,
        "length": 4,
        "offset": 83,
        "surroundingCode": "\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "396500b18bb8b1cb2a4255523bc0a5de330260e4d74a1b5a58e463cf0cb1838a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "yaml"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'dawidd'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": ".github/workflows/qodana.yml",
      "language": "yaml",
      "line": 25,
      "offset": 15,
      "length": 6,
      "code": {
        "startLine": 23,
        "length": 6,
        "offset": 76,
        "surroundingCode": "      - name: Download artifact\n        id: download-artifact\n        uses: dawidd6/action-download-artifact@v2\n        with:\n          run_number: ${{ env.GITHUB_RUN_NUMBER_WITH_OFFSET }}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "3f3239e7d270e07b0b8fd9a83e322debccc322e6339578b38abe7c1a606ff1df"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "yaml"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'peaceiris'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": ".github/workflows/qodana.yml",
      "language": "yaml",
      "line": 38,
      "offset": 15,
      "length": 9,
      "code": {
        "startLine": 36,
        "length": 9,
        "offset": 114,
        "surroundingCode": "        run: echo \"${{steps.parse_json.outputs.TOTAL}} counts\"\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "46666487e327492a084079e541653dc7c0fb2d01f7091121621d171c0c2d3b3a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "textmate"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'endlocal'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "gradlew.bat",
      "language": "textmate",
      "line": 87,
      "offset": 25,
      "length": 8,
      "code": {
        "startLine": 85,
        "length": 8,
        "offset": 36,
        "surroundingCode": "\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "65e6abce42481803c054efd8a0e31e7a759163598d64828a92b3c0c2ed95f0cc"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "textmate"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'appname'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "gradlew.bat",
      "language": "textmate",
      "line": 74,
      "offset": 73,
      "length": 7,
      "code": {
        "startLine": 72,
        "length": 7,
        "offset": 95,
        "surroundingCode": "\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "6a92f28d0b2c8ab92384bb0aeff306a53322a3028d51f02d9e3e2eb7bc984515"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "yaml"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'peaceiris'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": ".github/workflows/labeled.yml",
      "language": "yaml",
      "line": 35,
      "offset": 15,
      "length": 9,
      "code": {
        "startLine": 33,
        "length": 9,
        "offset": 144,
        "surroundingCode": "      - name: Deploy to GitHub Pages\n        if: ${{(github.event.label.name == 'qodana') || (github.event.label.name == 'テスト')}}\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "7a2359cccd48d5c9c9ae60fec7bbf236d71cd7f21426d1548f3245d8d29231e0"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "kotlin"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'unneccesarry'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 9,
      "length": 12,
      "code": {
        "startLine": 7,
        "length": 12,
        "offset": 52,
        "surroundingCode": "\nclass MainActivity : AppCompatActivity() {\n    val unneccesarry: Int? = 0\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "b59ed11cc72248b5382a5663ea3054563a2f7e8da34db7b287828c431c51958a"
},{
  "tool": "Code Inspection",
  "category": "Proofreading",
  "type": "Typo",
  "tags": [
    "textmate"
  ],
  "severity": "Low",
  "comment": "Typo: In word 'setlocal'",
  "detailsInfo": "Reports typos and misspellings in your code, comments, and literals and fixes them with one click.",
  "sources": [
    {
      "type": "file",
      "path": "gradlew.bat",
      "language": "textmate",
      "line": 25,
      "offset": 25,
      "length": 8,
      "code": {
        "startLine": 23,
        "length": 8,
        "offset": 88,
        "surroundingCode": "\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample",
    "inspectionName": "SpellCheckingInspection",
    "baselineState": "new"
  },
  "hash": "f0d24f323886dd33ecba8ac2d3a1b2ff2f95c9d1b8f633c5956a077468f6441a"
},{
  "tool": "Code Inspection",
  "category": "Declaration redundancy",
  "type": "Unnecessary module dependency",
  "severity": "High",
  "comment": "Module 'Qodana__Sample.app.unitTest' sources do not depend on module 'Qodana__Sample.app.main' sources",
  "detailsInfo": "Reports dependencies on modules that are not used. The quick-fix safely removes such unused dependencies.",
  "sources": [
    {
      "type": "file",
      "path": "Qodana__Sample.app.unitTest",
      "language": "",
      "line": 0,
      "offset": 0,
      "length": 0,
      "code": {
        "startLine": 0,
        "length": 0,
        "offset": 0,
        "surroundingCode": ""
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.unitTest",
    "inspectionName": "UnnecessaryModuleDependencyInspection",
    "baselineState": "new"
  },
  "hash": "89475afca9a7768eda143d1ae16b1ccfeb85393810d0cb94ccb629610749122b"
},{
  "tool": "Code Inspection",
  "category": "Declaration redundancy",
  "type": "Unnecessary module dependency",
  "severity": "High",
  "comment": "Module 'Qodana__Sample.app.androidTest' sources do not depend on module 'Qodana__Sample.app.main' sources",
  "detailsInfo": "Reports dependencies on modules that are not used. The quick-fix safely removes such unused dependencies.",
  "sources": [
    {
      "type": "file",
      "path": "Qodana__Sample.app.androidTest",
      "language": "",
      "line": 0,
      "offset": 0,
      "length": 0,
      "code": {
        "startLine": 0,
        "length": 0,
        "offset": 0,
        "surroundingCode": ""
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.androidTest",
    "inspectionName": "UnnecessaryModuleDependencyInspection",
    "baselineState": "new"
  },
  "hash": "dd4dc0655d262e0369cbc135eca9d2f9c5d2c5cd7e45c6d7d87e69eb86385914"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"test\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 13,
        "length": 4,
        "offset": 15,
        "surroundingCode": "    }\n\n    fun test(@Nullable s: String?): Int? = s?.let { it.length }\n\n    fun main() {"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "UnusedSymbol",
    "baselineState": "new"
  },
  "hash": "25d6ce87c8487a0854512bb879636805feaae9665047b4916c42f11f62e34b05"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"greeting\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 9,
      "length": 8,
      "code": {
        "startLine": 19,
        "length": 8,
        "offset": 15,
        "surroundingCode": "    }\n\n    fun greeting(user: String): String? = \"Hello, $user!\"\n}"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "UnusedSymbol",
    "baselineState": "new"
  },
  "hash": "3be16bcd15355b3f79147572ab446fc4c7a8e39e0367e708c3009ede278f79a6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"unneccesarry\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 9,
      "length": 12,
      "code": {
        "startLine": 7,
        "length": 12,
        "offset": 52,
        "surroundingCode": "\nclass MainActivity : AppCompatActivity() {\n    val unneccesarry: Int? = 0\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "UnusedSymbol",
    "baselineState": "new"
  },
  "hash": "7399b2ef759092ee3de465d1947e5103b3cf9215efe4a899bac1264c5531b1fc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"main\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/java/com/example/qodana_sample/MainActivity.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 15,
        "length": 4,
        "offset": 73,
        "surroundingCode": "    fun test(@Nullable s: String?): Int? = s?.let { it.length }\n\n    fun main() {\n        listOf(1, 2, 3).filter { it > 1 }.count()\n    }"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "UnusedSymbol",
    "baselineState": "new"
  },
  "hash": "95898cb59e11d1a6f92544c837a2914662017d1129748807a9bec9de92576dc9"
},{
  "tool": "Code Inspection",
  "category": "XML",
  "type": "Unused schema declaration",
  "tags": [
    "XML"
  ],
  "severity": "High",
  "comment": "Namespace declaration is never used",
  "detailsInfo": "Reports an unused namespace declaration or location hint in XML.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/res/values/themes.xml",
      "language": "XML",
      "line": 1,
      "offset": 12,
      "length": 46,
      "code": {
        "startLine": 1,
        "length": 46,
        "offset": 11,
        "surroundingCode": "<resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.Qodana_Sample\" parent=\"Theme.MaterialComponents.DayNight.DarkActionBar\">"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "XmlUnusedNamespaceDeclaration",
    "baselineState": "new"
  },
  "hash": "201d7abeac477edd90dd7556eae88372748a3ce149cf83d2c040ef089a3b484e"
},{
  "tool": "Code Inspection",
  "category": "XML",
  "type": "Unused schema declaration",
  "tags": [
    "XML"
  ],
  "severity": "High",
  "comment": "Namespace declaration is never used",
  "detailsInfo": "Reports an unused namespace declaration or location hint in XML.",
  "sources": [
    {
      "type": "file",
      "path": "app/src/main/res/values-night/themes.xml",
      "language": "XML",
      "line": 1,
      "offset": 12,
      "length": 46,
      "code": {
        "startLine": 1,
        "length": 46,
        "offset": 11,
        "surroundingCode": "<resources xmlns:tools=\"http://schemas.android.com/tools\">\n    <!-- Base application theme. -->\n    <style name=\"Theme.Qodana_Sample\" parent=\"Theme.MaterialComponents.DayNight.DarkActionBar\">"
      }
    }
  ],
  "attributes": {
    "module": "Qodana__Sample.app.main",
    "inspectionName": "XmlUnusedNamespaceDeclaration",
    "baselineState": "new"
  },
  "hash": "8c88c12428f0d615426dd6c60a5b2bf8d6a8213cba495ad32e373e2befb48a84"
}]}